{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a2c825789d51b99d7f47","webpack:///external \"mongoose\"","webpack:///./src/store/store.js","webpack:///external \"colors\"","webpack:///external \"net\"","webpack:///external \"network\"","webpack:///./src/index.js","webpack:///external \"babel-polyfill\"","webpack:///external \"pusher-js\"","webpack:///external \"lodash\"","webpack:///external \"body-parser\"","webpack:///./src/connectToDB.js","webpack:///./src/connectWithPeer.js","webpack:///external \"express\"","webpack:///./src/utils/findIPAddress.js","webpack:///external \"ip\"","webpack:///./src/store/reducer.js","webpack:///external \"redux\"","webpack:///./src/db/syncBlocksWithStore.js","webpack:///./src/classes/Block.js","webpack:///external \"js-sha256\"","webpack:///./src/models/Block.js","webpack:///external \"bluebird\"","webpack:///external \"dotenv\""],"names":["require","reducer","Redux","store","createStore","dispatch","addLoggingToDispatch","rawDispatch","action","console","log","type","yellow","Object","keys","join","green","returnValue","module","exports","config","app","use","json","urlencoded","extended","PUSHER_APP_KEY","DEFAULT_PORT","MAX_PEERS","handleConnection","conn","remoteAddr","remoteAddress","remotePort","blue","setEncoding","on","onConnData","onConnClose","onConnError","d","split","args","version","lastBlockHash","state","lastBlock","getState","write","header","getBlockHeaderHash","err","message","allPeers","startup","listen","process","env","PORT","ipAddr","gray","dbConnection","server","createServer","JSON","stringify","address","client","auth","params","ip_addr","port","cluster","authEndpoint","encrypted","numBlocks","channel","subscribe","bind","members","each","member","id","push","ip","slice","i","length","peer","newAllPeers","forEach","Promise","resolve","reject","connect","Error","connectToDB","IS_CONNECTED","IS_VERSION_COMPATIBLE","HAS_MORE_BLOCKS","Socket","data","toString","blockHeaderHash","findOne","hash","savedLastBlock","savedLastBlockHash","connectWithPeer","get_public_ip","findIPAddress","initialState","dbLoaded","nonce","difficulty","nodeCoin","count","sort","timestamp","limit","block","newBlock","previousHash","merkleHash","txs","blocksize","save","formatBlock","syncBlocksWithStore","setHeader","COIN","genesisPreviousHash","genesisMerkleRoot","genesisDifficulty","genesisNonce","genesisTimestamp","genesisTransaction","vin","n","prevout","vout","nValue","scriptPubKey","Block","isGenesis","addTransaction","transaction","schema","String","required","default","Number","Array","BlockSchema","Schema","BlockModel","model"],"mappings":"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","file":"nodecoin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"events\"] = factory();\n\telse\n\t\troot[\"events\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a2c825789d51b99d7f47","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 0\n// module chunks = 0","require('colors');\n\nconst reducer = require('./reducer');\n\nconst Redux = require('redux');\n\nconst store = Redux.createStore(reducer);\n\nstore.dispatch = addLoggingToDispatch(store);\n\nfunction addLoggingToDispatch(store) {\n  const rawDispatch = store.dispatch;\n  return (action) => {\n    console.log(`> Action: ${action.type}`.yellow);\n    // console.log('> prev state'.gray, store.getState().lastBlock);\n    console.log(`> Keys: ${Object.keys(action).join(', ')}`.green);\n    const returnValue = rawDispatch(action);\n    // console.log('> next state'.green, store.getState());\n    // console.log(action.type.green);\n    return returnValue;\n  }\n}\n\nmodule.exports = store;\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/store.js","module.exports = require(\"colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"colors\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"network\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"network\"\n// module id = 4\n// module chunks = 0","import 'colors';\nimport 'babel-polyfill';\n\nimport Client from 'pusher-js';\nimport _ from 'lodash';\nimport bodyParser from 'body-parser';\nimport connectToDB from './connectToDB';\nimport connectWithPeer from './connectWithPeer';\nimport express from 'express';\nimport findIPAddress from 'utils/findIPAddress';\nimport ip from 'ip';\nimport mongoose from 'mongoose';\nimport net from 'net';\nimport network from 'network';\nimport store from 'store/store';\nimport syncBlocksWithStore from 'db/syncBlocksWithStore';\n\nrequire('dotenv').config();\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// get current IP address in use\n// const ipAddr = ip.address();\n// const ipAddr = '192.168.1.150';\n\nconst PUSHER_APP_KEY = '86e36fb6cb404d67a108'; // connect via public key\nconst DEFAULT_PORT = 8334; // default port for net connections\nconst MAX_PEERS = 25;\n\nfunction handleConnection(conn) {\n  const remoteAddr = `${conn.remoteAddress}:${conn.remotePort}`;\n  console.log(`> New client connection from ${remoteAddr}`.blue);\n\n  conn.setEncoding('utf8');\n  conn.on('data', onConnData);\n  conn.on('close', onConnClose);\n  conn.on('error', onConnError);\n\n  function onConnData(d) {\n    let [ type, ...args ] = d.split(' ');\n    console.log(`> Connection data from: ${remoteAddr}`, d, type);\n    let version, lastBlockHash, state, lastBlock;\n    switch(type) {\n      case 'VERSION':\n        version = args[0];\n        lastBlockHash = args[1];\n        state = store.getState();\n        lastBlock = state.lastBlock;\n        console.log('> Responding to VERSION request');\n        conn.write([ 'VERSION', lastBlock.header.version, lastBlock.getBlockHeaderHash() ].join(' '));\n    }\n  }\n  function onConnClose() {\n    console.log('connection from %s closed', remoteAddr);\n  }\n  function onConnError(err) {\n    console.log('Connection %s error: %s', remoteAddr, err.message);\n  }\n}\n\nlet allPeers = [ ];\n\n\nfunction startup() {\n  app.listen(process.env.PORT || 3000, async function() {\n    const ipAddr = await findIPAddress();\n    console.log('> Server listening on port '.gray, process.env.PORT, ipAddr);\n\n    // connect to local instance of MongoDB\n    const dbConnection = await connectToDB();\n    console.log('> Connected to local MongoDB'.gray);\n\n    // create a TCP/IP server on current IP address\n    const server = net.createServer();\n    server.on('connection', handleConnection);\n\n    server.listen(DEFAULT_PORT, '0.0.0.0', function() {\n      console.log(`> TCP/IP server listening on:`.gray, JSON.stringify(server.address()));\n    });\n\n    // initialize presence channel via Pusher\n    const client = new Client(PUSHER_APP_KEY, {\n      auth: { params: { ip_addr: ipAddr, port: 8334 } },\n      cluster: 'us2',\n      authEndpoint: 'https://pusher-presence-auth.herokuapp.com/pusher/auth',\n      encrypted: true\n    });\n\n    // initialize blockchain (MongoDB local)\n    const { numBlocks, lastBlock } = await syncBlocksWithStore();\n\n    console.log('> Subscribing to broadcast changes...'.gray);\n    const channel = client.subscribe('presence-node-coin');\n\n    // SUCCESSFULLY JOINED\n    channel.bind('pusher:subscription_succeeded', async (members) => {\n      console.log('> Subscription succeeded: ', members);\n      allPeers = [ ];\n      channel.members.each(member => {\n        if (member.id !== ipAddr) {\n          allPeers.push({ ip: member.id });\n        }\n      });\n      allPeers = allPeers.slice(0, MAX_PEERS);\n      // console.log('> All peers: ', allPeers);\n      store.dispatch({ type: 'SET_PEERS', allPeers });\n      let lastBlock = store.getState().lastBlock;\n      let lastBlockHash = lastBlock.getBlockHeaderHash();\n      let version = lastBlock.header.version;\n      // console.log('> Last block hash: ', version, lastBlockHash);\n\n      // send version message to all peers, w/ version and last block hash\n      for (let i = 0; i < allPeers.length; i++) {\n        const peer = allPeers[i];\n        await connectWithPeer(peer, lastBlockHash, version);\n      }\n    });\n\n    // MEMBER ADDED\n    channel.bind('pusher:member_added', function(member){\n      let allPeers = store.getState().allPeers;\n      allPeers.push({ ip: member.id });\n      store.dispatch({ type: 'SET_PEERS', allPeers });\n      // TODO: send ping to new member to exchange headers\n    });\n\n    // MEMBER REMOVED\n    channel.bind('pusher:member_removed', function(member){\n      console.log('> Member removed: ', member);\n      let allPeers = store.getState().allPeers;\n      let newAllPeers = [ ];\n      allPeers.forEach(peer => {\n        if (peer.ip !== member.id) {\n          newAllPeers.push(peer);\n        }\n      });\n      store.dispatch({ type: 'SET_PEERS', allPeers: newAllPeers });\n      // TODO: stop any ongoing requests with peer\n    });\n  });\n}\n\nstartup();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"pusher-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pusher-js\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 9\n// module chunks = 0","import mongoose from 'mongoose';\n\nasync function connectToDB() {\n  return new Promise((resolve, reject) => {\n    mongoose.connect('mongodb://localhost:27017/nodecoin', (err) => {\n      if (err) {\n        throw new Error(`Error connecting to mongo. ${err}`);\n        reject(err);\n      } else {\n        // console.log('> Successfully conected to MongoDB 🔐');\n        resolve(true);\n      }\n    });\n  });\n}\n\nexport default connectToDB;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connectToDB.js","import Block from 'models/Block';\nimport net from 'net';\nimport store from 'store/store';\n\nconst DEFAULT_PORT = 8334;\n\nasync function connectWithPeer(peer, lastBlockHash, version) {\n  let IS_CONNECTED = false;\n  let IS_VERSION_COMPATIBLE = false;\n  let HAS_MORE_BLOCKS = false;\n  // console.log('> Connecting with peer: ', peer, lastBlockHash, version);\n  const port = DEFAULT_PORT;\n  const client = new net.Socket();\n  client.connect(port, peer.ip, () => {\n    console.log('> Connected to peer: ', peer);\n    IS_CONNECTED = true;\n    let type = 'VERSION';\n    client.write([ type, version, lastBlockHash ].join(' '));\n  });\n\n  client.on('data', async data => {\n    let [ type, ...args ] = data.toString().split(' ');\n    // console.log('> Received: ', data.toString());\n    let version, blockHeaderHash;\n    switch(type) {\n      case 'VERSION':\n        version = args[0];\n        blockHeaderHash = args[1];\n        if (version !== '1') {\n          break;\n        }\n        IS_VERSION_COMPATIBLE = true;\n        console.log('> Received block hash: ', blockHeaderHash);\n        // check db for what block height received block hash is\n        let lastBlock = await Block.findOne({ hash: blockHeaderHash });\n        if (!lastBlock) {\n          // send getblocks message\n          let savedLastBlock = store.getState().lastBlock;\n          let savedLastBlockHash = savedLastBlock.getBlockHeaderHash();\n          client.write([ 'GETBLOCKS', savedLastBlockHash ].join(' '));\n        }\n        break;\n      case 'GETBLOCKS':\n        // find next 50 blocks\n    }\n  });\n\n  client.on('close', () => {\n    console.log('> Connection closed');\n  })\n}\n\nexport default connectWithPeer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connectWithPeer.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 12\n// module chunks = 0","import network from 'network';\n\nasync function findIPAddress() {\n  return new Promise((resolve, reject) => {\n    network.get_public_ip((err, ip) => {\n      if (err) {\n        reject(err);\n      }\n      resolve(ip);\n    });\n  });\n}\n\nexport default findIPAddress;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/findIPAddress.js","module.exports = require(\"ip\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ip\"\n// module id = 14\n// module chunks = 0","const initialState = {\n  /*\n    this checks at start, connect to local mongo and load number of blocks -\n    let count = await Blocks.find({}).count();\n    Then load these variables.\n    If count == 0, hard code genesis block, then emit last block to peers\n    If count > 0, find last block - await Blocks.find({ }).sort({ timestamp: -1 }).limit(1);\n    Emit last block to peers to receive remaining blocks\n  */\n  dbLoaded: false,\n  numBlocks: 0,\n  allPeers: [ ], // list of { ip: String, port: Number }\n  lastBlock: null,\n  version: 1,\n  nonce: 0,\n  difficulty: 0,\n  numBlocks: 0,\n};\n\nconst nodeCoin = (state = initialState, action) => {\n  switch(action.type) {\n    case 'SET_INITIAL_BLOCK_COUNT':\n      return {\n        ...state,\n        dbLoaded: true,\n        lastBlock: action.lastBlock,\n        numBlocks: action.numBlocks,\n      };\n    case 'SET_NONCE':\n      return {\n        ...state,\n        difficulty: action.difficulty,\n        nonce: action.nonce,\n      };\n    case 'SET_PEERS':\n      return { ...state, allPeers: action.allPeers };\n    default:\n      return state;\n  }\n};\n\nmodule.exports = nodeCoin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/reducer.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 16\n// module chunks = 0","import BlockClass from 'classes/Block';\nimport BlockModel from 'models/Block';\nimport store from 'store/store';\n\nasync function syncBlocksWithStore() {\n  let numBlocks = await BlockModel.count();\n  let lastBlock = await BlockModel.findOne().sort({ timestamp: -1 }).limit(1);\n\n  if (numBlocks <= 0) {\n    let block = new BlockClass({ }, [ ], true);\n    let newBlock = new BlockModel({\n      hash: block.getBlockHeaderHash(),\n      version: block.header.version,\n      previousHash: block.header.previousHash,\n      merkleHash: block.header.merkleHash,\n      timestamp: block.header.timestamp,\n      difficulty: block.header.difficulty,\n      nonce: block.header.nonce,\n      txs: block.txs,\n      blocksize: block.blocksize,\n    });\n    await newBlock.save();\n    lastBlock = newBlock;\n  }\n\n  const { difficulty, nonce } = lastBlock;\n  // update Redux store\n  store.dispatch({ type: 'SET_NONCE', difficulty, nonce });\n  store.dispatch({ type: 'SET_INITIAL_BLOCK_COUNT', lastBlock: formatBlock(lastBlock), numBlocks });\n  return { numBlocks, lastBlock };\n}\n\nfunction formatBlock(block) {\n\n  let newBlock = new BlockClass(block, block.txs);\n  newBlock.setHeader(block);\n  return newBlock;\n}\n\nexport default syncBlocksWithStore;\n\n\n\n// WEBPACK FOOTER //\n// ./src/db/syncBlocksWithStore.js","const store = require('store/store');\n\nimport SHA256 from 'js-sha256';\n\nconst COIN = 100000000;\nconst genesisPreviousHash = '0000000000000000000000000000000000000000000000000000000000000000';\nconst genesisMerkleRoot = '4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b';\nconst genesisDifficulty = 486604799;\nconst genesisNonce = 2083236893;\nconst genesisTimestamp = 1231006505000; // Jan 3, 2009\nconst genesisTransaction = {\n  vin: [ { n: 'COINBASE', prevout: null } ],\n  vout: [ { nValue: 50 * COIN, scriptPubKey: '1Nd85AnFYDtaQAG6vF9FVWXFWksG5HuA3M' } ]\n};\n\nclass Block {\n  constructor(header, txs, isGenesis = false) {\n    let state = store.getState();\n    this.header = {\n      version: isGenesis ? 1 : header.version,\n      previousHash: isGenesis ? genesisPreviousHash : header.previousHash,\n      merkleHash: isGenesis ? genesisMerkleRoot : header.merkleHash,\n      timestamp: isGenesis ? genesisTimestamp : header.timestamp,\n      difficulty: isGenesis ? genesisDifficulty : header.difficulty,\n      nonce: isGenesis ? genesisNonce : header.nonce,\n    };\n    this.txs = [ ];\n    if (isGenesis) {\n      this.addTransaction(genesisTransaction);\n    } else {\n      this.txs = txs;\n    }\n    this.blocksize = JSON.stringify(this).length;\n  }\n  getBlockHeaderHash() {\n    const { version, previousHash, merkleHash, timestamp, difficulty, nonce } = this.header;\n    return SHA256([ version, previousHash, merkleHash, timestamp, difficulty, nonce, JSON.stringify(this.txs) ].join(' '));\n  }\n  setHeader(header) {\n    this.header = {\n      version: header.version,\n      previousHash: header.previousHash,\n      merkleHash: header.merkleHash,\n      timestamp: header.timestamp,\n      difficulty: header.difficulty,\n      nonce: header.nonce,\n    };\n    return this.header;\n  }\n  addTransaction(transaction) {\n    this.txs.push(transaction);\n    return this.txs;\n  }\n};\n\n// let block = new Block(null, true); // genesis block\n// console.log('> Genesis block: ', block);\n\nmodule.exports = Block;\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/Block.js","module.exports = require(\"js-sha256\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"js-sha256\"\n// module id = 19\n// module chunks = 0","import mongoose from 'mongoose';\n\nmongoose.Promise = require('bluebird');\n\nconst schema = {\n  hash: { type: String, required: true },\n  version: { default: 1, type: Number },\n  previousHash: { type: String, required: true },\n  merkleHash: { type: String, required: true },\n  timestamp: { type: Number, required: true },\n  difficulty: { type: Number, required: true },\n  nonce: { type: Number, required: true },\n  txs: { type: Array, default: [ ] },\n  blocksize: { type: Number, required: true },\n};\n\nconst BlockSchema = new mongoose.Schema(schema);\n\nconst BlockModel = mongoose.model('blocks', BlockSchema);\n\nexport default BlockModel;\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Block.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}